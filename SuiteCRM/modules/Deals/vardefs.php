<?php
/**
 * Variable Definitions for Deals Module
 * 
 * This file contains the field definitions and relationships for the Deals module
 * 
 * @package MakeDealCRM
 * @subpackage Deals
 */

if (!defined('sugarEntry') || !sugarEntry) {
    die('Not A Valid Entry Point');
}

$dictionary['Deal'] = array(
    'table' => 'deals',
    'audited' => true,
    'unified_search' => true,
    'duplicate_merge' => true,
    'comment' => 'Deals are the central object for all acquisition activities',
    'fields' => array(
        // Basic fields inherited from Basic template
        'id' => array(
            'name' => 'id',
            'vname' => 'LBL_ID',
            'type' => 'id',
            'required' => true,
            'reportable' => true,
            'duplicate_on_record_copy' => 'no',
            'comment' => 'Unique identifier',
            'mandatory_fetch' => true,
        ),
        'name' => array(
            'name' => 'name',
            'vname' => 'LBL_NAME',
            'type' => 'name',
            'dbType' => 'varchar',
            'len' => 255,
            'unified_search' => true,
            'required' => true,
            'importable' => 'required',
            'duplicate_merge' => 'enabled',
            'merge_filter' => 'selected',
            'duplicate_on_record_copy' => 'always',
        ),
        'date_entered' => array(
            'name' => 'date_entered',
            'vname' => 'LBL_DATE_ENTERED',
            'type' => 'datetime',
            'group' => 'created_by_name',
            'comment' => 'Date record created',
            'enable_range_search' => true,
            'options' => 'date_range_search_dom',
            'studio' => array('portaleditview' => false),
            'duplicate_on_record_copy' => 'no',
        ),
        'date_modified' => array(
            'name' => 'date_modified',
            'vname' => 'LBL_DATE_MODIFIED',
            'type' => 'datetime',
            'group' => 'modified_by_name',
            'comment' => 'Date record last modified',
            'enable_range_search' => true,
            'studio' => array('portaleditview' => false),
            'options' => 'date_range_search_dom',
            'duplicate_on_record_copy' => 'no',
        ),
        'modified_user_id' => array(
            'name' => 'modified_user_id',
            'rname' => 'user_name',
            'id_name' => 'modified_user_id',
            'vname' => 'LBL_MODIFIED',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'isnull' => false,
            'group' => 'modified_by_name',
            'dbType' => 'id',
            'reportable' => true,
            'comment' => 'User who last modified record',
            'massupdate' => false,
            'duplicate_on_record_copy' => 'no',
        ),
        'created_by' => array(
            'name' => 'created_by',
            'rname' => 'user_name',
            'id_name' => 'modified_user_id',
            'vname' => 'LBL_CREATED',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'isnull' => false,
            'dbType' => 'id',
            'group' => 'created_by_name',
            'comment' => 'User who created record',
            'massupdate' => false,
            'duplicate_on_record_copy' => 'no',
        ),
        'description' => array(
            'name' => 'description',
            'vname' => 'LBL_DESCRIPTION',
            'type' => 'text',
            'comment' => 'Full text of the note',
            'full_text_search' => array('enabled' => true, 'boost' => 1),
            'rows' => 6,
            'cols' => 80,
            'duplicate_on_record_copy' => 'always',
        ),
        'deleted' => array(
            'name' => 'deleted',
            'vname' => 'LBL_DELETED',
            'type' => 'bool',
            'default' => '0',
            'reportable' => false,
            'duplicate_on_record_copy' => 'no',
            'comment' => 'Record deletion indicator',
        ),
        'assigned_user_id' => array(
            'name' => 'assigned_user_id',
            'rname' => 'user_name',
            'id_name' => 'assigned_user_id',
            'vname' => 'LBL_ASSIGNED_TO_ID',
            'group' => 'assigned_user_name',
            'type' => 'relate',
            'table' => 'users',
            'module' => 'Users',
            'reportable' => true,
            'isnull' => false,
            'dbType' => 'id',
            'audited' => true,
            'duplicate_on_record_copy' => 'always',
            'comment' => 'User ID assigned to record',
            'duplicate_merge' => 'disabled',
        ),
        'assigned_user_name' => array(
            'name' => 'assigned_user_name',
            'link' => 'assigned_user_link',
            'vname' => 'LBL_ASSIGNED_TO',
            'rname' => 'full_name',
            'type' => 'relate',
            'reportable' => false,
            'source' => 'non-db',
            'table' => 'users',
            'id_name' => 'assigned_user_id',
            'module' => 'Users',
            'duplicate_merge' => 'disabled',
            'duplicate_on_record_copy' => 'always',
        ),
        
        // Deal-specific fields
        'status' => array(
            'name' => 'status',
            'vname' => 'LBL_STATUS',
            'type' => 'enum',
            'options' => 'deal_status_dom',
            'len' => 100,
            'audited' => true,
            'comment' => 'The status of the deal',
            'merge_filter' => 'enabled',
            'sortable' => true,
            'reportable' => true,
            'unified_search' => true,
            'default' => 'Sourcing',
        ),
        'source' => array(
            'name' => 'source',
            'vname' => 'LBL_SOURCE',
            'type' => 'enum',
            'options' => 'deal_source_dom',
            'len' => 100,
            'audited' => true,
            'comment' => 'The source of the deal',
            'merge_filter' => 'enabled',
            'reportable' => true,
        ),
        'deal_value' => array(
            'name' => 'deal_value',
            'vname' => 'LBL_DEAL_VALUE',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'The value of the deal',
            'duplicate_on_record_copy' => 'always',
            'audited' => true,
        ),
        'currency_id' => array(
            'name' => 'currency_id',
            'vname' => 'LBL_CURRENCY_ID',
            'type' => 'currency_id',
            'dbType' => 'id',
            'group' => 'currency_id',
            'duplicate_on_record_copy' => 'no',
            'audited' => true,
        ),
        'at_risk_status' => array(
            'name' => 'at_risk_status',
            'vname' => 'LBL_AT_RISK_STATUS',
            'type' => 'enum',
            'options' => 'at_risk_status_dom',
            'len' => 20,
            'default' => 'Normal',
            'comment' => 'Indicates if deal is at risk based on time in stage',
            'reportable' => true,
        ),
        'focus_c' => array(
            'name' => 'focus_c',
            'vname' => 'LBL_FOCUS',
            'type' => 'bool',
            'default' => '0',
            'comment' => 'Flag to indicate this is a focus deal',
            'reportable' => true,
        ),
        'date_in_current_stage' => array(
            'name' => 'date_in_current_stage',
            'vname' => 'LBL_DATE_IN_CURRENT_STAGE',
            'type' => 'datetime',
            'comment' => 'Date when deal entered current stage',
            'studio' => false,
        ),
        'days_in_stage' => array(
            'name' => 'days_in_stage',
            'vname' => 'LBL_DAYS_IN_STAGE',
            'type' => 'int',
            'len' => 11,
            'comment' => 'Number of days in current stage',
            'studio' => array('editview' => false),
            'reportable' => true,
        ),
        
        // Financial fields
        'asking_price_c' => array(
            'name' => 'asking_price_c',
            'vname' => 'LBL_ASKING_PRICE',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'The asking price for the deal',
            'audited' => true,
        ),
        'ttm_revenue_c' => array(
            'name' => 'ttm_revenue_c',
            'vname' => 'LBL_TTM_REVENUE',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Trailing twelve months revenue',
            'audited' => true,
        ),
        'ttm_ebitda_c' => array(
            'name' => 'ttm_ebitda_c',
            'vname' => 'LBL_TTM_EBITDA',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Trailing twelve months EBITDA',
            'audited' => true,
        ),
        'sde_c' => array(
            'name' => 'sde_c',
            'vname' => 'LBL_SDE',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Seller Discretionary Earnings',
            'audited' => true,
        ),
        'proposed_valuation_c' => array(
            'name' => 'proposed_valuation_c',
            'vname' => 'LBL_PROPOSED_VALUATION',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Proposed valuation for the deal',
            'audited' => true,
        ),
        'target_multiple_c' => array(
            'name' => 'target_multiple_c',
            'vname' => 'LBL_TARGET_MULTIPLE',
            'type' => 'decimal',
            'dbType' => 'decimal',
            'len' => '10,2',
            'comment' => 'Target EBITDA multiple',
            'audited' => true,
        ),
        
        // Capital stack fields
        'equity_c' => array(
            'name' => 'equity_c',
            'vname' => 'LBL_EQUITY',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Equity portion of capital stack',
            'audited' => true,
        ),
        'senior_debt_c' => array(
            'name' => 'senior_debt_c',
            'vname' => 'LBL_SENIOR_DEBT',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Senior debt portion of capital stack',
            'audited' => true,
        ),
        'seller_note_c' => array(
            'name' => 'seller_note_c',
            'vname' => 'LBL_SELLER_NOTE',
            'type' => 'currency',
            'dbType' => 'decimal',
            'len' => '26,6',
            'comment' => 'Seller note portion of capital stack',
            'audited' => true,
        ),
    ),
    
    'relationships' => array(
        'deals_modified_user' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'Deals',
            'rhs_table' => 'deals',
            'rhs_key' => 'modified_user_id',
            'relationship_type' => 'one-to-many',
        ),
        'deals_created_by' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'Deals',
            'rhs_table' => 'deals',
            'rhs_key' => 'created_by',
            'relationship_type' => 'one-to-many',
        ),
        'deals_assigned_user' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'Deals',
            'rhs_table' => 'deals',
            'rhs_key' => 'assigned_user_id',
            'relationship_type' => 'one-to-many',
        ),
        'deals_contacts' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Contacts',
            'rhs_table' => 'contacts',
            'rhs_key' => 'id',
            'relationship_type' => 'many-to-many',
            'join_table' => 'deals_contacts',
            'join_key_lhs' => 'deal_id',
            'join_key_rhs' => 'contact_id',
        ),
        'deals_documents' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Documents',
            'rhs_table' => 'documents',
            'rhs_key' => 'id',
            'relationship_type' => 'many-to-many',
            'join_table' => 'deals_documents',
            'join_key_lhs' => 'deal_id',
            'join_key_rhs' => 'document_id',
        ),
        'deals_tasks' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Tasks',
            'rhs_table' => 'tasks',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Deals',
        ),
        'deals_notes' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Notes',
            'rhs_table' => 'notes',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Deals',
        ),
        'deals_meetings' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Meetings',
            'rhs_table' => 'meetings',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Deals',
        ),
        'deals_calls' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Calls',
            'rhs_table' => 'calls',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Deals',
        ),
        'deals_emails' => array(
            'lhs_module' => 'Deals',
            'lhs_table' => 'deals',
            'lhs_key' => 'id',
            'rhs_module' => 'Emails',
            'rhs_table' => 'emails',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Deals',
        ),
    ),
    
    'indices' => array(
        array(
            'name' => 'idx_deals_name',
            'type' => 'index',
            'fields' => array('name'),
        ),
        array(
            'name' => 'idx_deals_status',
            'type' => 'index',
            'fields' => array('status', 'deleted'),
        ),
        array(
            'name' => 'idx_deals_assigned',
            'type' => 'index',
            'fields' => array('assigned_user_id', 'deleted'),
        ),
        array(
            'name' => 'idx_deals_source',
            'type' => 'index',
            'fields' => array('source', 'deleted'),
        ),
        array(
            'name' => 'idx_deals_focus',
            'type' => 'index',
            'fields' => array('focus_c', 'deleted'),
        ),
        array(
            'name' => 'idx_deals_at_risk',
            'type' => 'index',
            'fields' => array('at_risk_status', 'deleted'),
        ),
    ),
    
    'optimistic_locking' => true,
);

// Add custom module fields if they exist
if (file_exists('custom/Extension/modules/Deals/Ext/Vardefs/vardefs.ext.php')) {
    include('custom/Extension/modules/Deals/Ext/Vardefs/vardefs.ext.php');
}

VardefManager::createVardef('Deals', 'Deal', array('basic', 'assignable'));